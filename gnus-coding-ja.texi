\input texinfo-ja

@setfilename gnus-coding-ja.info
@settitle Gnus Coding Style and Maintenance Guide
@syncodeindex fn cp
@syncodeindex vr cp
@syncodeindex pg cp
@documentencoding UTF-8
@documentlanguage ja

@dircategory Emacs
@direntry
* Gnus Coding-ja: (gnus-coding-ja).
                                Gnus Coding Style and Maintenance Guide.
@end direntry

@copying
Copyright @copyright{} 2004--2005, 2007--2019 Free Software
Foundation, Inc.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being ``A GNU Manual'',
and with the Back-Cover Texts as in (a) below.  A copy of the license
is included in the section entitled ``GNU Free Documentation License''.

この文書を、フリーソフトウェア財団発行の GNU フリー文書利用許諾契約書
第 1.3 版またはそれ以降の版が定める条件の下で複製、配布、あるいは変更す
ることを許可します。変更不可部分は指定しません。「A GNU Manual」は表表紙
テキスト、以下の (a) は裏表紙テキストです。この利用許諾契約書の複写は
「GNU フリー文書利用許諾契約書」という章に含まれています。

(a) The FSF's Back-Cover Text is: ``You have the freedom to copy and
modify this GNU manual.''

(a) FSF の裏表紙テキスト:「あなたにはこの GNU Manual を複製したり変更す
る自由があります。」
@end quotation
@end copying

@titlepage
@title Gnus Coding Style and Maintenance Guide

@author by Reiner Steib  <Reiner.Steib@@gmx.de>

@insertcopying
@end titlepage
@c
@c 明らかにこれは未成熟な草稿に過ぎません。とにかく、それを見とがめた誰
@c かが直してくれることを期待して、私たちはこれをリポジトリーに置きまし
@c た。;-)  一部を直してくれるだけでもありがたいです。

@ifnottex
@node Top
@top Gnus Coding Style and Maintenance Guide

このマニュアルは @dots{} を説明します。

@insertcopying
@end ifnottex

@menu
* Gnus Coding Style:: Gnus でコードを書くときの流儀
* Gnus Maintenance Guide:: Gnus の維持管理に関する手引
* GNU Free Documentation License:: この文書の利用許諾契約書
@end menu
@c
@c @ref{Gnus Reference Guide, ,Gnus リファレンスガイド, gnus-ja, The Gnus
@c Newsreader}

@node Gnus Coding Style
@section Gnus でコードを書くときの流儀
@subsection 依存関係

Gnus の配布は、Gnus のために書かれ Gnus のために集中的に使われるたくさん
のライブラリーを含んでいます。しかし、それらのライブラリーの多くはそれら
単独でも有用です。例えば他の Emacs Lisp パッケージが、@acronym{MIME} ラ
イブラリーを使うかもしれません。@xref{Top, ,Top, emacs-mime-ja, The
Emacs MIME Manual}.

@subsection 汎用ライブラリー

@table @file
@item netrc.el
@file{.netrc} を解析する機能を提供します。
@c 2005-10-21 現在...
このファイルは Gnus に依存しません。

@item format-spec.el
任意のフォーマット文字列をフォーマットする関数群を提供します。
@c 2005-10-21 現在...
このファイルは Gnus に依存しません。

@item hex-util.el
16進数の文字列をエンコード/デコードするための関数群です。
@c 2007-08-25 現在...
このファイルは Gnus に依存しません。
@end table

@subsection 暗号化とセキュリティー

@table @file
@item encrypt.el
ファイルを暗号化するルーチン群を提供します。
@c 2005-10-25 現在...
このファイルは Gnus に依存しません。

@item password.el
利用者のパスワードを読み取り、パスワードキャッシュを使うこともあります。
@c 2005-10-21 現在...
このファイルは Gnus に依存しません。

@item tls.el
GnuTLS で囲むラッパーを介して TLS/SSL をサポートします。
@c 2005-10-21 現在...
このファイルは Gnus に依存しません。

@item pgg*.el
さまざまな PGP の実装のためのインターフェースを提供します。
@c 2005-10-21 現在...
これらのファイルは Gnus に依存しません。

@item sha1.el
SHA1 Secure Hash Algorithm.
@c 2007-08-25 現在...
このファイルは Gnus に依存しません。
@end table

@subsection ネットワーキング

@table @file
@item dig.el
ドメイン名システム dig へのインターフェースです。
@c 2005-10-21 現在...
このファイルに Gnus への重大な依存はありません。
@code{gnus-run-mode-hooks} (ラッパー関数) を使います。

@item dns.el, dns-mode.el
ドメイン名サービスで調べます。
@c 2005-10-21 現在...
これらのファイルは Gnus に依存しません。
@end table

@subsection RFC に関係するメールとニュースのライブラリー

@table @file
@item pop3.el
ポストオフィスプロトコル (RFC1460) へのインターフェースです。
@c 2005-10-21 現在...
このファイルは Gnus に依存しません。

@item imap.el
@acronym{IMAP} ライブラリーです。
@c 2005-10-21 現在...
このファイルは Gnus に依存しません。

@item ietf-drums.el
RFC 2822 ヘッダーを解析する関数群を提供します。
@c 2005-10-21 現在...
このファイルは Gnus に依存しません。

@item rfc1843.el
HZ (RFC1843) デコードを行ないます。HZ は中国語と @acronym{ASCII} 文字を
任意に混ぜ合わせた文章の、ファイル交換のためのデータです。
@c 2005-10-21 現在...
@code{rfc1843-gnus-setup} は Gnus でだけ役に立つでしょう。Gnus への依存
を無くすために、この関数は別の場所に移設すべきかもしれません。これ以外に、
重大ではないけれども Gnus に依存している関
数 @code{rfc1843-decode-article-body} については、引数をオプションにする
ことによって、@code{gnus-newsgroup-name} を除外することができるでしょう。

@item rfc2045.el
RFC2045 ヘッダーをデコードする関数群を提供します。
@c 2007-08-25 現在...
このファイルは Gnus に依存しません。

@item rfc2047.el
RFC2047 メッセージをエンコードおよびデコードする関数群を提供します。
@c 2007-08-25 現在...
このファイルは Gnus に依存しません。
@c
でも、いくつかの Gnus 由来のシンボルをテストします (訳注: それらが無くて
も動作します)。

@item rfc2104.el
RFC2104 に基づくメッセージのハッシュによる認証のためのコードを提供します。
@c 2007-08-25 現在...
このファイルは Gnus に依存しません。

@item rfc2231.el
RFC2231 ヘッダーをデコードする関数群を提供します。
@c 2007-08-25 現在...
このファイルは Gnus に依存しません。

@item flow-fill.el
RFC2646 の "flowed" テキストを処理します。
@c 2005-10-27 現在...
このファイルは Gnus に依存しません。

@item uudecode.el
ELisp 版の uudecode です (訳注: でも外部プログラムの uudecode がある場合
は、ディフォルトでそれを使います)。
@c 2005-12-06 現在...
このファイルは Gnus に依存しません。
@c ... でも、カスタムグループは gnus-extract です。

@item canlock.el
Cancel-Lock 機能のための関数群を提供します。
@c draft-ietf-usefor-cancel-lock-01.txt 参照。
@c この草稿は期限切れ消去されましたが、2007年に大手のニュース・プロバイ
@c ダーたち (例えば news.individual.org) が使い始めて復活しました。
@c 2007-08-25 現在...
このファイルは Gnus に依存しません。
@end table

@subsection message

Gnus ではすべてのメッセージ (メールとニュースの両方) の作成を Message モー
ドのバッファーで行ないます。Message モードは Emacs のメールモードの置き
換えになることが意図されています。@file{message.el} は Gnus に依存しない
ようにすべきです。しかし、残念ながらそうなっていないのです。依存関係を絶
ち切るためのパッチや提案を歓迎します。
@c message.el は nnheader を必要とし、それは gnus-util を必要とします。

@subsection Emacs @acronym{MIME}

@file{mml*.el} および @file{mm-*.el} のファイル群は Emacs のため
の @acronym{MIME} の機能を提供します。

@acronym{MML} (@acronym{MIME} Meta Language) は Gnus からは独立したもの
だと考えられていますが、残念ながら現実はそうではありません。その依存関係
を絶つためのパッチや提案を歓迎します。

@subsection Gnus バックエンド

@file{nn*.el} のファイル群は NNTP (@file{nntp.el}), IMAP
(@file{nnimap.el}) および複数の他のメールバックエンドの機能を提供しま
す (おそらく @file{nnml.el}, @file{nnfolder.el} およ
び @file{nnmaildir.el} が、もっとも広く使われているメールバックエンドで
す)。
@c
@c mm-uu は nnheader を呼び出し、nnheader は gnus-util を呼び出します。
@c message.el も nnheader を呼び出します。

@section 互換性

No Gnus と Gnus 5.10.10 以上は次のもので動作します:

@itemize @bullet
@item
Emacs 21.1 とそれ以上。

@item
XEmacs 21.4 とそれ以上。
@end itemize

Gnus 5.10.8 以下は次のもので動作します:

@itemize @bullet
@item
Emacs 20.7 とそれ以上。

@item
XEmacs 21.1 とそれ以上。
@end itemize

@node Gnus Maintenance Guide
@chapter Gnus の維持管理に関する手引

@section 安定版と開発版

Gnus の開発は通常 Git リポジトリーの幹で行なわれています。(2010年4月19日
現在、リポジトリーは http://git.gnus.org にあります。以前は CVS で行なわ
れていました。)  すなわち、開発することと新しい機能をテストするために分
離された枝はありません。幹ではとても活発に、ほとんど日替りで開発が行なわ
れています。新しいメジャーなリリース (例えば 5.10.1) の後だけは、通常、
数ヶ月間に渡って新規な機能の開発が凍結されます。Gnus 5.10.6 がリリースさ
れた後で新規な機能の開発が再開しましたが、必要に応じてさらに安定な
版 (5.10.8, @dots{}) をリリースするための安定版の枝 (v5-10) で、5.10 系
列は存続しています。
@xref{Gnus Development, ,Gnus の開発, gnus-ja, The Gnus Newsreader}.

Gnus の安定版のリリースは、最終的には Emacs の一部になります。例え
ば Gnus 5.8 は (Gnus 5.9 に改称して) Emacs 21 の一部になりました。
5.10 系列は Gnus 5.11 として Emacs 22 の一部になりました。

@section 同期
@c
@c 随所に関連する Message-ID があります。Gmane でそれらのスレッドを参照
@c するには http://thread.gmane.org/Message-ID を使ってください (そして
@c 表題をクリックしてください)。
@c
@c Miles Bader さんのいくつかの記事から引用します...
@c
@c <v9eklyke6b.fsf@marauder.physik.uni-ulm.de>
@c <buovfd71nkk.fsf@mctpc71.ucom.lsi.nec.co.jp>

その昔、Emacs に Gnus を編入させるのは、まったくやっかいなことでした。
Emacs のリポジトリーにある Gnus に対して行なわれた変更が、新しい Gnus の
版にも適用されているかどうかをチェックしなければならなかったのです。そう
しないと、Emacs のリポジトリーで行なわれたバグの修正が失われてしまうかも
しれませんから。

Gnus 5.10 を編入するにあたっては、Emacs CVS で行なわれたバグの修正
が Gnus CVS に伝搬することを確実にするために、Miles Bader が半自動的
な Emacs-Gnus ゲートウェイを立ち上げました。

Emacs が bzr に、そして Gnus が git に移行してからは、Emacs と Gnus の同
期を維持する面倒を山岡克美が引継ぎました。一つのリポジトリーに対して行な
われた変更は、通常はたいてい 2〜3日以内にもう一方に複写されます。

基本的にそのアイデアは、Emacs と Gnus v5-13 におけるすべての共通なファイ
ルを Emacs-Gnus ゲートウェイが同じにすることです。ただし非常に正当な理由
がある (例えば Emacs では Gnus の版を表す文字列が @samp{5.13} です
が v5-13 枝では @samp{5.13.何がし} のままになっている) 場合を除きます。
さらに Emacs か v5-13 枝のどちらかで、それらのファイルに対して行なわれた
すべての変更は、Gnus の git の幹にも反映されます。ただし、こちらも正当な
理由がある場合を除きます。

@c (これまでの典型的な例外として、効果は同じだけれども違うやり方で行なわれ
@c た変更がすでに幹に存在していたことがありました。)
これによって、次の Gnus のメジャーな版が Emacs に編入されるとき、それは
非常に楽なはずです---Emacs だけで変更されたことが失われてしまうことを心
配せずに、Gnus の幹をそれらのファイルにどさっと置くだけで良いのです。

この結果、ハッカーであるあなたは、通常は一つの場所で変更を行なうだけで済
むことになります:

@itemize
@item
Gnus の外にあると見なされるファイル (例えば新しい @file{encrypt.el}) が
対象の場合は、おそらく Emacs で変更を行なうべきです。それは二〜三日後
に Gnus に現われるでしょう。

Emacs のリポジトリーへの書き込みが許されていない (またはそれが不便) なら
ば、v5-10 枝でそのようなファイルを変更すれば良いでしょう。それ
は Emacs のリポジトリーに伝搬されるはずです---しかし、それが論争の的にな
る可能性があって、メーリングリストで議論することが必要かどうかを判断する
ために、追加の調査が (Miles さんによって) 行なわれるでしょう。しかし多く
の変更は明らかなバグの修正なので、たいていの場合は問題ありません。

@item
Gnus のファイルへの変更で、それが十分に重要な Emacs と v5-10 枝の部分で
あるのならば、変更は v5-10 枝で行なえば良いでしょう。そしてそれ
は Emacs と Gnus の git の幹に反映されるでしょう (二〜三日後に)。そのよ
うな変更の最も顕著な例は、ドキュメントの改善を含むバグの修正です。

(おそらく、対象になるソースコードが v5-10 枝と Gnus の git の幹で異なる
ために) 衝突を生じることがわかっている場合は、あなたの変更を両方の場所に
インストールしてください。そして、私がそれらを同期させようとすると衝突す
るでしょう---そういうほとんどの場合に @emph{とにかく} 衝突します。でも、
私が二つの「同一の」変更を調べる場合に、それを解決してかつ実際にコードを
修正しなければならないことに比べれば、適切なものを選ぶだけで済む方が、多
くの場合、私にはより簡単です。

@item
Gnus の開発における雑多な変更については、単に Gnus の Git の幹を変更すれ
ば、それは Emacs に反映されるでしょう。二〜三年後に@dots{} :-)
@end itemize

もちろんどんな場合でも、私が同期させる作業を待てないのであれば、あなたの
変更を二つ以上の場所にチェックインすることはできるし、恐らく問題にならな
いでしょう。通常、変更は文字どおりにとにかく同一ですから、容易に自動的に
解決することができます (ときどき私はそのように重複して行なわれるチェック
インの中でお間抜けなもの、例えば空白文字の違いに気づいて、それらを統一し
ますけれどね ;-)。
@c
@c Emacs で行なわれた変更を Gnus に取り込むことを、私は頻繁には行ないませ
@c ん。Gnus で行なわれた変更を Emacs に持ち上げるよりも多くの手作業を必要と
@c する傾向があるからです。
@c
@c 私はディフォルトで週一回の同期を行なっています。さらに私は Gnus メーリン
@c グリストのあらゆるスレッドを追いかけて、話し合われているどんな変更でも、
@c それがより最新になるようにしています (そのため、話題になっている変更への
@c 追従は 1〜2日遅れます)。
@c
@c <buovfd71nkk.fsf@mctpc71.ucom.lsi.nec.co.jp>
@c
@c ついでに、同期に関するより詳しい説明を付記しておきましょう:

@section いろんなこと

@heading @file{GNUS-NEWS}

@file{etc/GNUS-NEWS} は @file{doc/misc/gnus-news.texi} から生成されます。
@file{etc/GNUS-NEWS} を編集してはいけません。
@file{doc/misc/gnus-news.texi} を編集し、@file{lisp} ディレクトリー
で @command{make +update-gnus-news} とタイプしてか
ら @file{etc/GNUS-NEWS} と @file{doc/misc/gnus-news.texi} をコミットして
ください。

訳注: 上記は Emacs の場合についての記述です。@file{gnus-news-ja.texi} の
内容は @file{gnus-ja.texi} (現在
は @pxref{No Gnus, ,No Gnus, gnus-ja, The Gnus Manual}) に組み込まれるの
で、@file{etc/GNUS-NEWS} の日本語訳に相当するものは用意していません。

@heading defcustoms で使う :version 情報の流儀

新しいカスタマイズ可能な変数を Oort Gnus (v5-10 枝を含む) に導入するとき
は、コメントを含んだ @code{:version "22.1" ;; Oort Gnus} を使ってくださ
い。あるいは、もしその機能が例えば Emacs 22.2 の Gnus 5.10.10 のために追
加されたのであれば、@code{:version "22.2" ;; Gnus 5.10.10} を使ってくだ
さい。
@c
その変数が No Gnus で新規だったら、@code{:version "23.1" ;; No Gnus} を
使ってください。

カスタマイズ可能な変数のディフォルト値を変更したときも、同じことを行なっ
てください。

@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include doclicense.texi
@bye
@c Local Variables:
@c fill-column: 72
@c End:
